{"version":3,"sources":["../node_modules/simple-lightbox/src/simpleLightbox.js","../node_modules/arrive/src/arrive.js","index.js"],"names":["SimpleLightbox","require","scormContentSelector","accessibleContentSelector","document","arrive","fireOnAttributesModification","unbindArrive","addButton","pToSpanHTML","p","elem","createElement","innerHTML","outerHTML","findAccessible","doc","nodes","querySelectorAll","console","log","accessibleElements","node","innerText","trim","nodeName","push","cleanETX","replace","cleanEmpty","wrapDiv","div","wrapper","classList","add","appendChild","frame","button","id","onclick","elems","contentDocument","open","content","elementClass","body"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"aparecium.js","sourceRoot":"","sourcesContent":["(function(root, factory) {\n\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.SimpleLightbox = factory();\n    }\n\n}(this, function() {\n\n    function assign(target) {\n\n        for (var i = 1; i < arguments.length; i++) {\n\n            var obj = arguments[i];\n\n            if (obj) {\n                for (var key in obj) {\n                    obj.hasOwnProperty(key) && (target[key] = obj[key]);\n                }\n            }\n\n        }\n\n        return target;\n\n    }\n\n    function addClass(element, className) {\n\n        if (element && className) {\n            element.className += ' ' + className;\n        }\n\n    }\n\n    function removeClass(element, className) {\n\n        if (element && className) {\n            element.className = element.className.replace(\n                new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'), ' '\n            ).trim();\n        }\n\n    }\n\n    function parseHtml(html) {\n\n        var div = document.createElement('div');\n        div.innerHTML = html.trim();\n\n        return div.childNodes[0];\n\n    }\n\n    function matches(el, selector) {\n\n        return (el.matches || el.matchesSelector || el.msMatchesSelector).call(el, selector);\n\n    }\n\n    function getWindowHeight() {\n\n        return 'innerHeight' in window\n            ? window.innerHeight\n            : document.documentElement.offsetHeight;\n\n    }\n\n    function SimpleLightbox(options) {\n\n        this.init.apply(this, arguments);\n\n    }\n\n    SimpleLightbox.defaults = {\n\n        // add custom classes to lightbox elements\n        elementClass: '',\n        elementLoadingClass: 'slbLoading',\n        htmlClass: 'slbActive',\n        closeBtnClass: '',\n        nextBtnClass: '',\n        prevBtnClass: '',\n        loadingTextClass: '',\n\n        // customize / localize controls captions\n        closeBtnCaption: 'Close',\n        nextBtnCaption: 'Next',\n        prevBtnCaption: 'Previous',\n        loadingCaption: 'Loading...',\n\n        bindToItems: true, // set click event handler to trigger lightbox on provided $items\n        closeOnOverlayClick: true,\n        closeOnEscapeKey: true,\n        nextOnImageClick: true,\n        showCaptions: true,\n\n        captionAttribute: 'title', // choose data source for library to glean image caption from\n        urlAttribute: 'href', // where to expect large image\n\n        startAt: 0, // start gallery at custom index\n        loadingTimeout: 100, // time after loading element will appear\n\n        appendTarget: 'body', // append elsewhere if needed\n\n        beforeSetContent: null, // convenient hooks for extending library behavoiur\n        beforeClose: null,\n        afterClose: null,\n        beforeDestroy: null,\n        afterDestroy: null,\n\n        videoRegex: new RegExp(/youtube.com|vimeo.com/) // regex which tests load url for iframe content\n\n    };\n\n    assign(SimpleLightbox.prototype, {\n\n        init: function(options) {\n\n            options = this.options = assign({}, SimpleLightbox.defaults, options);\n\n            var self = this;\n            var elements;\n\n            if (options.$items) {\n                elements = options.$items.get();\n            }\n\n            if (options.elements) {\n                elements = [].slice.call(\n                    typeof options.elements === 'string'\n                        ? document.querySelectorAll(options.elements)\n                        : options.elements\n                );\n            }\n\n            this.eventRegistry = {lightbox: [], thumbnails: []};\n            this.items = [];\n            this.captions = [];\n\n            if (elements) {\n\n                elements.forEach(function(element, index) {\n\n                    self.items.push(element.getAttribute(options.urlAttribute));\n                    self.captions.push(element.getAttribute(options.captionAttribute));\n\n                    if (options.bindToItems) {\n\n                        self.addEvent(element, 'click', function(e) {\n\n                            e.preventDefault();\n                            self.showPosition(index);\n\n                        }, 'thumbnails');\n\n                    }\n\n                });\n\n            }\n\n            if (options.items) {\n                this.items = options.items;\n            }\n\n            if (options.captions) {\n                this.captions = options.captions;\n            }\n\n        },\n\n        addEvent: function(element, eventName, callback, scope) {\n\n            this.eventRegistry[scope || 'lightbox'].push({\n                element: element,\n                eventName: eventName,\n                callback: callback\n            });\n\n            element.addEventListener(eventName, callback);\n\n            return this;\n\n        },\n\n        removeEvents: function(scope) {\n\n            this.eventRegistry[scope].forEach(function(item) {\n                item.element.removeEventListener(item.eventName, item.callback);\n            });\n\n            this.eventRegistry[scope] = [];\n\n            return this;\n\n        },\n\n        next: function() {\n\n            return this.showPosition(this.currentPosition + 1);\n\n        },\n\n        prev: function() {\n\n            return this.showPosition(this.currentPosition - 1);\n\n        },\n\n        normalizePosition: function(position) {\n\n            if (position >= this.items.length) {\n                position = 0;\n            } else if (position < 0) {\n                position = this.items.length - 1;\n            }\n\n            return position;\n\n        },\n\n        showPosition: function(position) {\n\n            var newPosition = this.normalizePosition(position);\n\n            if (typeof this.currentPosition !== 'undefined') {\n                this.direction = newPosition > this.currentPosition ? 'next' : 'prev';\n            }\n\n            this.currentPosition = newPosition;\n\n            return this.setupLightboxHtml()\n                .prepareItem(this.currentPosition, this.setContent)\n                .show();\n\n        },\n\n        loading: function(on) {\n\n            var self = this;\n            var options = this.options;\n\n            if (on) {\n\n                this.loadingTimeout = setTimeout(function() {\n\n                    addClass(self.$el, options.elementLoadingClass);\n\n                    self.$content.innerHTML =\n                        '<p class=\"slbLoadingText ' + options.loadingTextClass + '\">' +\n                            options.loadingCaption +\n                        '</p>';\n                    self.show();\n\n                }, options.loadingTimeout);\n\n            } else {\n\n                removeClass(this.$el, options.elementLoadingClass);\n                clearTimeout(this.loadingTimeout);\n\n            }\n\n        },\n\n        prepareItem: function(position, callback) {\n\n            var self = this;\n            var url = this.items[position];\n\n            this.loading(true);\n\n            if (this.options.videoRegex.test(url)) {\n\n                callback.call(self, parseHtml(\n                    '<div class=\"slbIframeCont\"><iframe class=\"slbIframe\" frameborder=\"0\" allowfullscreen src=\"' + url + '\"></iframe></div>')\n                );\n\n            } else {\n\n                var $imageCont = parseHtml(\n                    '<div class=\"slbImageWrap\"><img class=\"slbImage\" src=\"' + url + '\" /></div>'\n                );\n\n                this.$currentImage = $imageCont.querySelector('.slbImage');\n\n                if (this.options.showCaptions && this.captions[position]) {\n                    $imageCont.appendChild(parseHtml(\n                        '<div class=\"slbCaption\">' + this.captions[position] + '</div>')\n                    );\n                }\n\n                this.loadImage(url, function() {\n\n                    self.setImageDimensions();\n\n                    callback.call(self, $imageCont);\n\n                    self.loadImage(self.items[self.normalizePosition(self.currentPosition + 1)]);\n\n                });\n\n            }\n\n            return this;\n\n        },\n\n        loadImage: function(url, callback) {\n\n            if (!this.options.videoRegex.test(url)) {\n\n                var image = new Image();\n                callback && (image.onload = callback);\n                image.src = url;\n\n            }\n\n        },\n\n        setupLightboxHtml: function() {\n\n            var o = this.options;\n\n            if (!this.$el) {\n\n                this.$el = parseHtml(\n                    '<div class=\"slbElement ' + o.elementClass + '\">' +\n                        '<div class=\"slbOverlay\"></div>' +\n                        '<div class=\"slbWrapOuter\">' +\n                            '<div class=\"slbWrap\">' +\n                                '<div class=\"slbContentOuter\">' +\n                                    '<div class=\"slbContent\"></div>' +\n                                    '<button type=\"button\" title=\"' + o.closeBtnCaption + '\" class=\"slbCloseBtn ' + o.closeBtnClass + '\">×</button>' +\n                                    (this.items.length > 1\n                                        ? '<div class=\"slbArrows\">' +\n                                             '<button type=\"button\" title=\"' + o.prevBtnCaption + '\" class=\"prev slbArrow' + o.prevBtnClass + '\">' + o.prevBtnCaption + '</button>' +\n                                             '<button type=\"button\" title=\"' + o.nextBtnCaption + '\" class=\"next slbArrow' + o.nextBtnClass + '\">' + o.nextBtnCaption + '</button>' +\n                                          '</div>'\n                                        : ''\n                                    ) +\n                                '</div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>'\n                );\n\n                this.$content = this.$el.querySelector('.slbContent');\n\n            }\n\n            this.$content.innerHTML = '';\n\n            return this;\n\n        },\n\n        show: function() {\n\n            if (!this.modalInDom) {\n\n                document.querySelector(this.options.appendTarget).appendChild(this.$el);\n                addClass(document.documentElement, this.options.htmlClass);\n                this.setupLightboxEvents();\n                this.modalInDom = true;\n\n            }\n\n            return this;\n\n        },\n\n        setContent: function(content) {\n\n            var $content = typeof content === 'string'\n                ? parseHtml(content)\n                : content\n            ;\n\n            this.loading(false);\n\n            this.setupLightboxHtml();\n\n            removeClass(this.$content, 'slbDirectionNext');\n            removeClass(this.$content, 'slbDirectionPrev');\n\n            if (this.direction) {\n                addClass(this.$content, this.direction === 'next'\n                    ? 'slbDirectionNext'\n                    : 'slbDirectionPrev'\n                );\n            }\n\n            if (this.options.beforeSetContent) {\n                this.options.beforeSetContent($content, this);\n            }\n\n            this.$content.appendChild($content);\n\n            return this;\n\n        },\n\n        setImageDimensions: function() {\n\n            if (this.$currentImage) {\n                this.$currentImage.style.maxHeight = getWindowHeight() + 'px';\n            }\n\n        },\n\n        setupLightboxEvents: function() {\n\n            var self = this;\n\n            if (this.eventRegistry.lightbox.length) {\n                return this;\n            }\n\n            this.addEvent(this.$el, 'click', function(e) {\n\n                var $target = e.target;\n\n                if (matches($target, '.slbCloseBtn') || (self.options.closeOnOverlayClick && matches($target, '.slbWrap'))) {\n\n                    self.close();\n\n                } else if (matches($target, '.slbArrow')) {\n\n                    matches($target, '.next') ? self.next() : self.prev();\n\n                } else if (self.options.nextOnImageClick && self.items.length > 1 && matches($target, '.slbImage')) {\n\n                    self.next();\n\n                }\n\n            }).addEvent(document, 'keyup', function(e) {\n\n                self.options.closeOnEscapeKey && e.keyCode === 27 && self.close();\n\n                if (self.items.length > 1) {\n                    (e.keyCode === 39 || e.keyCode === 68) && self.next();\n                    (e.keyCode === 37 || e.keyCode === 65) && self.prev();\n                }\n\n            }).addEvent(window, 'resize', function() {\n\n                self.setImageDimensions();\n\n            });\n\n            return this;\n\n        },\n\n        close: function() {\n\n            if (this.modalInDom) {\n\n                this.runHook('beforeClose');\n                this.removeEvents('lightbox');\n                this.$el && this.$el.parentNode.removeChild(this.$el);\n                removeClass(document.documentElement, this.options.htmlClass);\n                this.modalInDom = false;\n                this.runHook('afterClose');\n\n            }\n\n            this.direction = undefined;\n            this.currentPosition = this.options.startAt;\n\n        },\n\n        destroy: function() {\n\n            this.close();\n            this.runHook('beforeDestroy');\n            this.removeEvents('thumbnails');\n            this.runHook('afterDestroy');\n\n        },\n\n        runHook: function(name) {\n\n            this.options[name] && this.options[name](this);\n\n        }\n\n    });\n\n    SimpleLightbox.open = function(options) {\n\n        var instance = new SimpleLightbox(options);\n\n        return options.content\n            ? instance.setContent(options.content).show()\n            : instance.showPosition(instance.options.startAt);\n\n    };\n\n    SimpleLightbox.registerAsJqueryPlugin = function($) {\n\n        $.fn.simpleLightbox = function(options) {\n\n            var lightboxInstance;\n            var $items = this;\n\n            return this.each(function() {\n                if (!$.data(this, 'simpleLightbox')) {\n                    lightboxInstance = lightboxInstance || new SimpleLightbox($.extend({}, options, {$items: $items}));\n                    $.data(this, 'simpleLightbox', lightboxInstance);\n                }\n            });\n\n        };\n\n        $.SimpleLightbox = SimpleLightbox;\n\n    };\n\n    if (typeof window !== 'undefined' && window.jQuery) {\n        SimpleLightbox.registerAsJqueryPlugin(window.jQuery);\n    }\n\n    return SimpleLightbox;\n\n}));\n","/*globals jQuery,Window,HTMLElement,HTMLDocument,HTMLCollection,NodeList,MutationObserver */\n/*exported Arrive*/\n/*jshint latedef:false */\n\n/*\n * arrive.js\n * v2.4.1\n * https://github.com/uzairfarooq/arrive\n * MIT licensed\n *\n * Copyright (c) 2014-2017 Uzair Farooq\n */\nvar Arrive = (function(window, $, undefined) {\n\n  \"use strict\";\n\n  if(!window.MutationObserver || typeof HTMLElement === 'undefined'){\n    return; //for unsupported browsers\n  }\n\n  var arriveUniqueId = 0;\n\n  var utils = (function() {\n    var matches = HTMLElement.prototype.matches || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector\n                  || HTMLElement.prototype.msMatchesSelector;\n\n    return {\n      matchesSelector: function(elem, selector) {\n        return elem instanceof HTMLElement && matches.call(elem, selector);\n      },\n      // to enable function overloading - By John Resig (MIT Licensed)\n      addMethod: function (object, name, fn) {\n        var old = object[ name ];\n        object[ name ] = function(){\n          if ( fn.length == arguments.length ) {\n            return fn.apply( this, arguments );\n          }\n          else if ( typeof old == 'function' ) {\n            return old.apply( this, arguments );\n          }\n        };\n      },\n      callCallbacks: function(callbacksToBeCalled, registrationData) {\n        if (registrationData && registrationData.options.onceOnly && registrationData.firedElems.length == 1) {\n          // as onlyOnce param is true, make sure we fire the event for only one item\n          callbacksToBeCalled = [callbacksToBeCalled[0]];\n        }\n\n        for (var i = 0, cb; (cb = callbacksToBeCalled[i]); i++) {\n          if (cb && cb.callback) {\n            cb.callback.call(cb.elem, cb.elem);\n          }\n        }\n\n        if (registrationData && registrationData.options.onceOnly && registrationData.firedElems.length == 1) {\n          // unbind event after first callback as onceOnly is true.\n          registrationData.me.unbindEventWithSelectorAndCallback.call(\n            registrationData.target, registrationData.selector, registrationData.callback);\n        }\n      },\n      // traverse through all descendants of a node to check if event should be fired for any descendant\n      checkChildNodesRecursively: function(nodes, registrationData, matchFunc, callbacksToBeCalled) {\n        // check each new node if it matches the selector\n        for (var i=0, node; (node = nodes[i]); i++) {\n          if (matchFunc(node, registrationData, callbacksToBeCalled)) {\n            callbacksToBeCalled.push({ callback: registrationData.callback, elem: node });\n          }\n\n          if (node.childNodes.length > 0) {\n            utils.checkChildNodesRecursively(node.childNodes, registrationData, matchFunc, callbacksToBeCalled);\n          }\n        }\n      },\n      mergeArrays: function(firstArr, secondArr){\n        // Overwrites default options with user-defined options.\n        var options = {},\n            attrName;\n        for (attrName in firstArr) {\n          if (firstArr.hasOwnProperty(attrName)) {\n            options[attrName] = firstArr[attrName];\n          }\n        }\n        for (attrName in secondArr) {\n          if (secondArr.hasOwnProperty(attrName)) {\n            options[attrName] = secondArr[attrName];\n          }\n        }\n        return options;\n      },\n      toElementsArray: function (elements) {\n        // check if object is an array (or array like object)\n        // Note: window object has .length property but it's not array of elements so don't consider it an array\n        if (typeof elements !== \"undefined\" && (typeof elements.length !== \"number\" || elements === window)) {\n          elements = [elements];\n        }\n        return elements;\n      }\n    };\n  })();\n\n\n  // Class to maintain state of all registered events of a single type\n  var EventsBucket = (function() {\n    var EventsBucket = function() {\n      // holds all the events\n\n      this._eventsBucket    = [];\n      // function to be called while adding an event, the function should do the event initialization/registration\n      this._beforeAdding    = null;\n      // function to be called while removing an event, the function should do the event destruction\n      this._beforeRemoving  = null;\n    };\n\n    EventsBucket.prototype.addEvent = function(target, selector, options, callback) {\n      var newEvent = {\n        target:             target,\n        selector:           selector,\n        options:            options,\n        callback:           callback,\n        firedElems:         []\n      };\n\n      if (this._beforeAdding) {\n        this._beforeAdding(newEvent);\n      }\n\n      this._eventsBucket.push(newEvent);\n      return newEvent;\n    };\n\n    EventsBucket.prototype.removeEvent = function(compareFunction) {\n      for (var i=this._eventsBucket.length - 1, registeredEvent; (registeredEvent = this._eventsBucket[i]); i--) {\n        if (compareFunction(registeredEvent)) {\n          if (this._beforeRemoving) {\n              this._beforeRemoving(registeredEvent);\n          }\n\n          // mark callback as null so that even if an event mutation was already triggered it does not call callback\n          var removedEvents = this._eventsBucket.splice(i, 1);\n          if (removedEvents && removedEvents.length) {\n            removedEvents[0].callback = null;\n          }\n        }\n      }\n    };\n\n    EventsBucket.prototype.beforeAdding = function(beforeAdding) {\n      this._beforeAdding = beforeAdding;\n    };\n\n    EventsBucket.prototype.beforeRemoving = function(beforeRemoving) {\n      this._beforeRemoving = beforeRemoving;\n    };\n\n    return EventsBucket;\n  })();\n\n\n  /**\n   * @constructor\n   * General class for binding/unbinding arrive and leave events\n   */\n  var MutationEvents = function(getObserverConfig, onMutation) {\n    var eventsBucket    = new EventsBucket(),\n        me              = this;\n\n    var defaultOptions = {\n      fireOnAttributesModification: false\n    };\n\n    // actual event registration before adding it to bucket\n    eventsBucket.beforeAdding(function(registrationData) {\n      var\n        target    = registrationData.target,\n        observer;\n\n      // mutation observer does not work on window or document\n      if (target === window.document || target === window) {\n        target = document.getElementsByTagName(\"html\")[0];\n      }\n\n      // Create an observer instance\n      observer = new MutationObserver(function(e) {\n        onMutation.call(this, e, registrationData);\n      });\n\n      var config = getObserverConfig(registrationData.options);\n\n      observer.observe(target, config);\n\n      registrationData.observer = observer;\n      registrationData.me = me;\n    });\n\n    // cleanup/unregister before removing an event\n    eventsBucket.beforeRemoving(function (eventData) {\n      eventData.observer.disconnect();\n    });\n\n    this.bindEvent = function(selector, options, callback) {\n      options = utils.mergeArrays(defaultOptions, options);\n\n      var elements = utils.toElementsArray(this);\n\n      for (var i = 0; i < elements.length; i++) {\n        eventsBucket.addEvent(elements[i], selector, options, callback);\n      }\n    };\n\n    this.unbindEvent = function() {\n      var elements = utils.toElementsArray(this);\n      eventsBucket.removeEvent(function(eventObj) {\n        for (var i = 0; i < elements.length; i++) {\n          if (this === undefined || eventObj.target === elements[i]) {\n            return true;\n          }\n        }\n        return false;\n      });\n    };\n\n    this.unbindEventWithSelectorOrCallback = function(selector) {\n      var elements = utils.toElementsArray(this),\n          callback = selector,\n          compareFunction;\n\n      if (typeof selector === \"function\") {\n        compareFunction = function(eventObj) {\n          for (var i = 0; i < elements.length; i++) {\n            if ((this === undefined || eventObj.target === elements[i]) && eventObj.callback === callback) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n      else {\n        compareFunction = function(eventObj) {\n          for (var i = 0; i < elements.length; i++) {\n            if ((this === undefined || eventObj.target === elements[i]) && eventObj.selector === selector) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n      eventsBucket.removeEvent(compareFunction);\n    };\n\n    this.unbindEventWithSelectorAndCallback = function(selector, callback) {\n      var elements = utils.toElementsArray(this);\n      eventsBucket.removeEvent(function(eventObj) {\n          for (var i = 0; i < elements.length; i++) {\n            if ((this === undefined || eventObj.target === elements[i]) && eventObj.selector === selector && eventObj.callback === callback) {\n              return true;\n            }\n          }\n          return false;\n      });\n    };\n\n    return this;\n  };\n\n\n  /**\n   * @constructor\n   * Processes 'arrive' events\n   */\n  var ArriveEvents = function() {\n    // Default options for 'arrive' event\n    var arriveDefaultOptions = {\n      fireOnAttributesModification: false,\n      onceOnly: false,\n      existing: false\n    };\n\n    function getArriveObserverConfig(options) {\n      var config = {\n        attributes: false,\n        childList: true,\n        subtree: true\n      };\n\n      if (options.fireOnAttributesModification) {\n        config.attributes = true;\n      }\n\n      return config;\n    }\n\n    function onArriveMutation(mutations, registrationData) {\n      mutations.forEach(function( mutation ) {\n        var newNodes    = mutation.addedNodes,\n            targetNode = mutation.target,\n            callbacksToBeCalled = [],\n            node;\n\n        // If new nodes are added\n        if( newNodes !== null && newNodes.length > 0 ) {\n          utils.checkChildNodesRecursively(newNodes, registrationData, nodeMatchFunc, callbacksToBeCalled);\n        }\n        else if (mutation.type === \"attributes\") {\n          if (nodeMatchFunc(targetNode, registrationData, callbacksToBeCalled)) {\n            callbacksToBeCalled.push({ callback: registrationData.callback, elem: targetNode });\n          }\n        }\n\n        utils.callCallbacks(callbacksToBeCalled, registrationData);\n      });\n    }\n\n    function nodeMatchFunc(node, registrationData, callbacksToBeCalled) {\n      // check a single node to see if it matches the selector\n      if (utils.matchesSelector(node, registrationData.selector)) {\n        if(node._id === undefined) {\n          node._id = arriveUniqueId++;\n        }\n        // make sure the arrive event is not already fired for the element\n        if (registrationData.firedElems.indexOf(node._id) == -1) {\n          registrationData.firedElems.push(node._id);\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    arriveEvents = new MutationEvents(getArriveObserverConfig, onArriveMutation);\n\n    var mutationBindEvent = arriveEvents.bindEvent;\n\n    // override bindEvent function\n    arriveEvents.bindEvent = function(selector, options, callback) {\n\n      if (typeof callback === \"undefined\") {\n        callback = options;\n        options = arriveDefaultOptions;\n      } else {\n        options = utils.mergeArrays(arriveDefaultOptions, options);\n      }\n\n      var elements = utils.toElementsArray(this);\n\n      if (options.existing) {\n        var existing = [];\n\n        for (var i = 0; i < elements.length; i++) {\n          var nodes = elements[i].querySelectorAll(selector);\n          for (var j = 0; j < nodes.length; j++) {\n            existing.push({ callback: callback, elem: nodes[j] });\n          }\n        }\n\n        // no need to bind event if the callback has to be fired only once and we have already found the element\n        if (options.onceOnly && existing.length) {\n          return callback.call(existing[0].elem, existing[0].elem);\n        }\n\n        setTimeout(utils.callCallbacks, 1, existing);\n      }\n\n      mutationBindEvent.call(this, selector, options, callback);\n    };\n\n    return arriveEvents;\n  };\n\n\n  /**\n   * @constructor\n   * Processes 'leave' events\n   */\n  var LeaveEvents = function() {\n    // Default options for 'leave' event\n    var leaveDefaultOptions = {};\n\n    function getLeaveObserverConfig() {\n      var config = {\n        childList: true,\n        subtree: true\n      };\n\n      return config;\n    }\n\n    function onLeaveMutation(mutations, registrationData) {\n      mutations.forEach(function( mutation ) {\n        var removedNodes  = mutation.removedNodes,\n            callbacksToBeCalled = [];\n\n        if( removedNodes !== null && removedNodes.length > 0 ) {\n          utils.checkChildNodesRecursively(removedNodes, registrationData, nodeMatchFunc, callbacksToBeCalled);\n        }\n\n        utils.callCallbacks(callbacksToBeCalled, registrationData);\n      });\n    }\n\n    function nodeMatchFunc(node, registrationData) {\n      return utils.matchesSelector(node, registrationData.selector);\n    }\n\n    leaveEvents = new MutationEvents(getLeaveObserverConfig, onLeaveMutation);\n\n    var mutationBindEvent = leaveEvents.bindEvent;\n\n    // override bindEvent function\n    leaveEvents.bindEvent = function(selector, options, callback) {\n\n      if (typeof callback === \"undefined\") {\n        callback = options;\n        options = leaveDefaultOptions;\n      } else {\n        options = utils.mergeArrays(leaveDefaultOptions, options);\n      }\n\n      mutationBindEvent.call(this, selector, options, callback);\n    };\n\n    return leaveEvents;\n  };\n\n\n  var arriveEvents = new ArriveEvents(),\n      leaveEvents  = new LeaveEvents();\n\n  function exposeUnbindApi(eventObj, exposeTo, funcName) {\n    // expose unbind function with function overriding\n    utils.addMethod(exposeTo, funcName, eventObj.unbindEvent);\n    utils.addMethod(exposeTo, funcName, eventObj.unbindEventWithSelectorOrCallback);\n    utils.addMethod(exposeTo, funcName, eventObj.unbindEventWithSelectorAndCallback);\n  }\n\n  /*** expose APIs ***/\n  function exposeApi(exposeTo) {\n    exposeTo.arrive = arriveEvents.bindEvent;\n    exposeUnbindApi(arriveEvents, exposeTo, \"unbindArrive\");\n\n    exposeTo.leave = leaveEvents.bindEvent;\n    exposeUnbindApi(leaveEvents, exposeTo, \"unbindLeave\");\n  }\n\n  if ($) {\n    exposeApi($.fn);\n  }\n  exposeApi(HTMLElement.prototype);\n  exposeApi(NodeList.prototype);\n  exposeApi(HTMLCollection.prototype);\n  exposeApi(HTMLDocument.prototype);\n  exposeApi(Window.prototype);\n\n  var Arrive = {};\n  // expose functions to unbind all arrive/leave events\n  exposeUnbindApi(arriveEvents, Arrive, \"unbindAllArrive\");\n  exposeUnbindApi(leaveEvents, Arrive, \"unbindAllLeave\");\n\n  return Arrive;\n\n})(window, typeof jQuery === 'undefined' ? null : jQuery, undefined);","// https://dbrekalo.github.io/simpleLightbox/\nconst SimpleLightbox  = require('simple-lightbox');\n\n// CSS\nrequire('./styles.css');\nrequire('../node_modules/simple-lightbox/dist/simpleLightbox.min.css');\n\nconst scormContentSelector = 'iframe#ScormContent';\nconst accessibleContentSelector = '.cp-accessibility';\n\n// Wait on the ScormContent frame\nrequire('arrive');\ndocument.arrive(scormContentSelector, {fireOnAttributesModification: true}, function() {\n  document.unbindArrive();\n  addButton(this);\n});\n\n// Convert a <p> to a <span> and return outer HTML string\nconst pToSpanHTML = (p) => {\n  const elem = document.createElement('span');\n  elem.innerHTML = p.innerHTML;\n  return elem.outerHTML;\n};\n\n// Text will be hidden in the DOM in <div>s with the cp-accessibility class\nfunction findAccessible(doc) {\n  const nodes = doc.querySelectorAll(accessibleContentSelector);\n  if(!nodes) {\n    return;\n  }\n\n  console.log('nodes', nodes);\n\n  const accessibleElements = [];\n  for(node of nodes) {\n    // Remove navigation text nodes\n    if(node.innerText.trim() === 'Skip to Main Content') continue;\n    if(node.innerText.trim() === 'Trigger this button to go to the next slide') continue;\n    if(node.innerText.trim() === 'Trigger this button to go to the previous slide') continue;\n    if(node.innerText.trim() === 'Trigger this button to exit') continue;\n\n\n    // Grab everything inside a DIV container\n    if(node.nodeName === 'DIV') {\n      accessibleElements.push(node.innerHTML);\n    }\n    // Turn <p> into <span> so we connect text that's actually meant to be a single paragraph.\n    else if(node.nodeName === 'P') {\n      accessibleElements.push(pToSpanHTML(node));\n    }\n    // Use the accessible node itself, (e.g., <a>)\n    else {\n      accessibleElements.push(node.outerHTML);\n    }\n  }\n\n  return accessibleElements;\n}\n\n// Deal with End-Of-Text (ETX, 0x03), which seems to signal the start of a bullet\nconst cleanETX = elem => elem.replace(/\\x03\\s*/g, '<br>');\n// Ignore things like <p> </p>\nconst cleanEmpty = elem => elem.replace(/^<[^>]+>\\s+<\\/[^>]+>$/, '');\n\nfunction wrapDiv(div) {\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('aparecium-wrapper');\n  wrapper.appendChild(div);\n  return wrapper;\n}\n\nfunction addButton(frame) {\n  const button = document.createElement('button');\n  button.id = 'aparecium-button';\n  // Include Unicode Sparkles - https://graphemica.com/✨\n  button.innerHTML = '&#10024; Aparecium';\n  button.onclick = function() {\n    const elems = findAccessible(frame.contentDocument);\n    if(!elems) {\n      return;\n    }\n     \n    console.log('Aparecium', elems);\n\n    const div = document.createElement('div');\n    div.classList.add('aparecium-text');\n\n    // Process and insert all relevant accessible text elements\n    for(elem of elems) {\n      // Deal with End-Of-Text (ETX, 0x03), which seems to signal the start of a bullet\n      elem = cleanETX(elem);\n      // Remove empty elements\n      elem = cleanEmpty(elem);\n\n      div.innerHTML += elem;\n    }\n\n    console.log('html', div.outerHTML);\n\n    SimpleLightbox.open({\n      content: wrapDiv(div).outerHTML,\n      elementClass: 'slbContentEl'\n    });\n  };\n\n  document.body.appendChild(button);\n}\n"]}